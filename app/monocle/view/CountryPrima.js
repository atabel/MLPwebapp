// Generated by CoffeeScript 1.4.0
(function() {
  var root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  __View.CountryPrima = (function(_super) {
    var instance;

    __extends(CountryPrima, _super);

    instance = null;

    CountryPrima.getInstance = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return instance != null ? instance : instance = (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args);
        return Object(result) === result ? result : child;
      })(__View.CountryPrima, args, function(){});
    };

    CountryPrima.prototype.events = {
      "tap div.prima-wrap": "onClickPrima",
      "tap div.miniature": "onClickMiniature"
    };

    CountryPrima.prototype.elements = {
      ".prima-value": "primaValue",
      ".prima-delta": "primaDelta",
      ".prima-percent": "primaPercent"
    };

    CountryPrima.prototype.container = "article#article-prima-value .prima";

    CountryPrima.prototype.template_url = "app/resources/templates/prima.mustache";

    function CountryPrima() {
      this.onClickChart = __bind(this.onClickChart, this);

      this.onClickNum = __bind(this.onClickNum, this);

      this.onClickMiniature = __bind(this.onClickMiniature, this);

      this.onClickPrima = __bind(this.onClickPrima, this);
      CountryPrima.__super__.constructor.apply(this, arguments);
      Monocle.Dom("#num-btn").on("tap", this.onClickNum);
      Monocle.Dom("#chart-btn").on("tap", this.onClickChart);
      Monocle.Dom(".miniature").on("tap", this.onClickMiniature);
    }

    CountryPrima.prototype.onClickPrima = function(evt) {
      this.container.animate("minify", "forward").addClass("minified");
      return Monocle.Dom(".miniature").animate("slide", "forward");
    };

    CountryPrima.prototype.onClickMiniature = function(evt) {
      this.container.animate("minify", "backward").removeClass("minified");
      return Monocle.Dom(".miniature").animate("slide", "backward");
    };

    CountryPrima.prototype.onClickNum = function(evt) {
      Monocle.Dom("#num-btn").addClass('active');
      Monocle.Dom("#chart-btn").removeClass('active');
      return this.container.removeClass("rotate-3d");
    };

    CountryPrima.prototype.onClickChart = function(evt) {
      Monocle.Dom("#chart-btn").addClass('active');
      Monocle.Dom("#num-btn").removeClass('active');
      return this.container.addClass("rotate-3d");
    };

    CountryPrima.prototype._html = function() {
      var $favBtn, country, elements, method;
      method = arguments[0], elements = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      country = elements[0];
      country.is_growing = country.primaIsGrowing();
      Monocle.Dom(".prima").removeClass("minified").addClass("show");
      CountryPrima.__super__._html.apply(this, arguments);
      this.header = this.el.parent().parent().parent().find("header .title");
      this.header.text("Prima de " + country.name);
      $favBtn = Monocle.Dom("#add-to-fav-btn");
      if (country.favourite) {
        $favBtn.find("strong").text("Quitar de favoritos");
        $favBtn.find("small").text("Elimiar este país de favoritos");
        return $favBtn.find(".icon").removeClass("star").addClass("star-empty");
      } else {
        $favBtn.find("strong").text("Añadir a favoritos");
        $favBtn.find("small").text("Añade este país a favoritos");
        return $favBtn.find(".icon").removeClass("star-empty").addClass("star");
      }
    };

    return CountryPrima;

  })(Monocle.View);

}).call(this);
