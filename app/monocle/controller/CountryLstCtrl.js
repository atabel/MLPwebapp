// Generated by CoffeeScript 1.4.0
(function() {
  var CountryLstCtrl, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  CountryLstCtrl = (function(_super) {

    __extends(CountryLstCtrl, _super);

    function CountryLstCtrl() {
      this.bindCountryChange = __bind(this.bindCountryChange, this);

      this.bindCountryCreate = __bind(this.bindCountryCreate, this);

      var pdr;
      CountryLstCtrl.__super__.constructor.apply(this, arguments);
      __Model.Country.bind("create", this.bindCountryCreate);
      __Model.Country.bind("change", this.bindCountryChange);
      pdr = new Lungo.Element.Pull("section#section-main article", {
        onPull: "Tira hacia abajo para actualizar...",
        onRelease: "Suelta para actualizar...",
        onRefresh: "Cargando...",
        callback: function() {
          return root.App.Services.getCountriesList(function(countries) {
            return pdr.hide();
          });
        }
      });
    }

    CountryLstCtrl.prototype.bindCountryCreate = function(country) {
      console.log("created country: ", country);
      return this;
    };

    CountryLstCtrl.prototype.bindCountryChange = function(country) {
      return this.updateAllCoutriesLst();
    };

    CountryLstCtrl.prototype.updateAllCoutriesLst = function() {
      var countries, sortedCountries, sorter;
      sorter = function(c) {
        return -c.prima_value;
      };
      countries = __Model.Country.all();
      sortedCountries = _.sortBy(countries, sorter);
      this.updateCountriesLst(sortedCountries, "article#all-primas ul");
      countries = __Model.Country.favourites();
      sortedCountries = _.sortBy(countries, sorter);
      this.updateCountriesLst(sortedCountries, "article#favourite-primas ul");
      return Lungo.Element.count("#favourites-tab-btn", countries.length);
    };

    CountryLstCtrl.prototype.updateCountriesLst = function(countries, container) {
      var country, first, method, uid, view, _results;
      first = true;
      _results = [];
      for (uid in countries) {
        country = countries[uid];
        view = new __View.Countryli({
          model: country,
          container: container
        });
        method = (first ? "html" : "append");
        view[method](country);
        _results.push(first = false);
      }
      return _results;
    };

    return CountryLstCtrl;

  })(Monocle.Controller);

  __Controller.CountryLst = new CountryLstCtrl("article#all-primas");

}).call(this);
